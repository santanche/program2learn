#!/bin/bash
# Exit script if any command fails
set -e

echo "--- üöÄ Starting Guile Kernel setup for Binder ---"

# Define a local installation directory since we don't have sudo
INSTALL_PREFIX="$HOME/.local"

# Ensure the necessary environment variables are set for the build process
export PKG_CONFIG_PATH="$INSTALL_PREFIX/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig"
export GUILE_LOAD_PATH="$INSTALL_PREFIX/share/guile/site/3.0${GUILE_LOAD_PATH:+:}$GUILE_LOAD_PATH"

# --- Create a workspace for building libraries ---
echo "--- üìÇ Creating a temporary 'lib' directory for source files ---"
mkdir lib
cd lib

# --- Install guile-json ---
echo "--- üì¶ Installing guile-json ---"
wget https://openbsd.c3sl.ufpr.br/savannah-nongnu/guile-json/guile-json-4.7.1.tar.gz
tar -xzf guile-json-4.7.1.tar.gz
cd guile-json-4.7.1
./configure --prefix="$INSTALL_PREFIX"
make
make install
cd ..
# **Cleanup guile-json source folder and tarball**
echo "--- üßπ Cleaning up guile-json files ---"
rm -rf guile-json-4.7.1 guile-json-4.7.1.tar.gz

# --- Install guile-simple-zmq ---
echo "--- üì¶ Installing guile-simple-zmq ---"
git clone https://github.com/jerry40/guile-simple-zmq.git
cd guile-simple-zmq
autoreconf --verbose --install --force
./configure --prefix="$INSTALL_PREFIX"
make
make install
cd ..
# **Cleanup guile-simple-zmq source folder**
echo "--- üßπ Cleaning up guile-simple-zmq files ---"
rm -rf guile-simple-zmq

# Define the Clojupyter version and JAR filename
CLOJUPYTER_VERSION="0.4.332"
JAR_FILE="clojupyter-${CLOJUPYTER_VERSION}-standalone.jar"
DOWNLOAD_URL="https://github.com/clojupyter/clojupyter/releases/download/v${CLOJUPYTER_VERSION}/${JAR_FILE}"

# Download the uberjar from GitHub releases
echo "--- Downloading Clojupyter ${CLOJUPYTER_VERSION} ---"
wget ${DOWNLOAD_URL}

# Check if the download was successful
if [ ! -f "$JAR_FILE" ]; then
    echo "--- ERROR: Failed to download Clojupyter JAR file. ---"
    exit 1
fi

# Use the downloaded JAR to install the kernel for Jupyter
echo "--- Installing Clojupyter kernel ---"
java -cp ${JAR_FILE} clojupyter.cmdline install --ident clojure

# --- Return to the root project directory ---
cd ..

# --- Configure the Jupyter Kernel ---
echo "--- ‚öôÔ∏è  Configuring Jupyter kernel ---"
echo "--- üì• Downloading the Guile Kernel source ---"
git clone https://github.com/jerry40/guile-kernel.git

KERNEL_DIR="$HOME/.local/share/jupyter/kernels/guile"
mkdir -p "$KERNEL_DIR"

# Copy ALL .scm files from the src directory to the kernel directory
cp guile-kernel/src/*.scm "$KERNEL_DIR/"

# **Cleanup the kernel source folder after copying files**
echo "--- üßπ Cleaning up kernel source files ---"
rm -rf guile-kernel lib

# Create the kernel.json file, dynamically inserting the correct path.
cat <<EOF > "$KERNEL_DIR/kernel.json"
{
    "argv": [
        "guile",
        "-L", "$INSTALL_PREFIX/share/guile/site/3.0",
        "-s", "$KERNEL_DIR/guile-jupyter-kernel.scm",
        "--",
        "{connection_file}"
    ],
    "display_name": "Guile",
    "language": "scheme"
}
EOF

echo "--- ‚ú® Guile Kernel setup complete! ---"

# Install Leiningen and ensure it's on the PATH
echo "Installing Leiningen..."
curl -o $HOME/lein https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
chmod +x $HOME/lein

# Self-install leiningen and add to ~/.bashrc for persistence across sessions
echo "Running Leiningen self-install..."
export PATH="$HOME:$PATH"
$HOME/lein version

# Create necessary directories for our project
echo "Setting up project structure..."
mkdir -p src/datomic_binder

echo "=== Clojure environment setup complete! ==="